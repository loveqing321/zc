<template lang="pug">
  el-container.${subModuleSpl}
    el-header.search-form(height="60px")
      el-form(ref="form" :inline="true" :model="searchForm")
        el-form-item(label="数据源:" prop="startTime")
          el-date-picker(
            v-model="searchForm.startTime"
            type="date"
            placeholder="开始时间"
            align="right"
            style="width: 180px"
          )
        el-form-item(label=":" prop="endTime")
          el-date-picker(
          v-model="searchForm.endTime"
          type="date"
          placeholder="结束时间"
          align="right"
          style="width: 180px"
        )
        el-form-item(label="数据库:" prop="db")
          el-input(v-model="searchForm.db" style="width: 160px")
        el-button(type="primary" @click="search") 搜索
        el-button.add(type="default" @click="add") 新建
    el-main(style="display: flex; flex-direction: column")
      grid-title(name="${subModuleListTitle}")
      grid(ref="grid" :remote-method="getData")
        el-table-column(
          type="index"
          width="40"
        )
        el-table-column(
          prop="id"
          label="ID"
          show-overflow-tooltip
        )
        el-table-column(prop="operate", label="操作", show-overflow-tooltip, width="150")
          template(slot-scope="{row}")
            el-button(type="primary", @click="modify(row)") 修改
            el-button(type="danger", @click="del(row)") 删除
    ${subModuleSpl}-form(
      :visible.sync="visible",
      v-if="visible"
      :formData="formData"
    )
</template>

<script>
import grid from '@/components/common/grid'
import gridTitle from '@/components/common/grid-title'
import ${subModuleLower}Form from './${subModuleSpl}-form'
import { queryByPage, queryById, del } from '@/api/${module}/${subModuleSpl}'

export default {
  name: '${subModuleSpl}',
  components: {
    grid,
    gridTitle,
    ${subModuleLower}Form
  },
  data () {
    return {
      searchForm: {

      },
      visible: false,
      formData: null
    }
  },
  methods: {
    search () {
#set($grid="this.$refs.grid")
      ${grid}.loadData(this.searchForm)
    },
    getData (postData) {
      return queryByPage(postData)
    },
    add () {
      this.formData = {}
      this.visible = true
    },
    async modify (row) {
      try {
        this.formData = await queryById({ id: row.id })
        this.visible = true
      } catch (e) {
        // ignore
      }
    },
    async del (row) {
      try {
        await this.$confirm('此操作将删除该条目, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning',
          center: true
        })
        await del({ id: row.id })
        this.$message.info('删除成功')
        this.search()
      } catch (e) {
        // ignore
      }
    }
  },
  mounted () {
    this.search()
    this.$on('form-search', this.search)
  }
}
</script>

<style scoped lang="less">
</style>
